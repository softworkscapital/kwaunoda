"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pesepay = void 0;
var axios_1 = __importDefault(require("axios"));
var buffer_1 = require("buffer");
var crypto_1 = require("crypto");
var transaction_1 = require("./payments/transaction");
var customer_1 = require("./payments/customer");
var payment_1 = require("./payments/payment");
var amount_1 = require("./payments/amount");
var response_1 = require("./response");
var constants_1 = require("./constants");
var Pesepay = (function () {
    function Pesepay(integrationKey, encryptionKey) {
        var _this = this;
        this.initiateTransaction = function (transaction) { return __awaiter(_this, void 0, void 0, function () {
            var payload, response, resObj, error_1, message;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this.resultUrl == null)
                            throw new Error('Result url has not beeen specified.');
                        if (this.returnUrl == null)
                            throw new Error('Return url has not been specified.');
                        transaction.resultUrl = this.resultUrl;
                        transaction.returnUrl = this.returnUrl;
                        payload = this.payloadEncrypt(JSON.stringify(transaction));
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        return [4, axios_1.default.post(constants_1.INITIATE_PAYMENT_URL, { payload: payload }, { headers: this.headers, insecureHTTPParser: true })];
                    case 2:
                        response = _b.sent();
                        resObj = JSON.parse(this.payloadDecrypt(response.data.payload));
                        return [2, new response_1.PesepayResponse(true, undefined, resObj.referenceNumber, resObj.pollUrl, resObj.redirectUrl)];
                    case 3:
                        error_1 = _b.sent();
                        message = (_a = error_1.message) !== null && _a !== void 0 ? _a : 'Something went wrong!';
                        return [2, new response_1.PesepayResponse(false, message)];
                    case 4: return [2];
                }
            });
        }); };
        this.checkPayment = function (referenceNumber) { return __awaiter(_this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
                url = "".concat(constants_1.CHECK_PAYMENT_URL, "?referenceNumber=").concat(referenceNumber);
                return [2, this.pollTransaction(url)];
            });
        }); };
        this.pollTransaction = function (pollUrl) { return __awaiter(_this, void 0, void 0, function () {
            var response, payload, resObj, paid, error_2, message;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 2, , 3]);
                        return [4, axios_1.default.get(pollUrl, { headers: this.headers, insecureHTTPParser: true })];
                    case 1:
                        response = _b.sent();
                        payload = response.data['payload'];
                        resObj = JSON.parse(this.payloadDecrypt(payload));
                        paid = resObj.transactionStatus == 'SUCCESS';
                        return [2, new response_1.PesepayResponse(true, undefined, resObj.referenceNumber, resObj.pollUrl, resObj.redirectUrl, paid)];
                    case 2:
                        error_2 = _b.sent();
                        message = (_a = error_2.message) !== null && _a !== void 0 ? _a : 'Something went wrong!';
                        return [2, new response_1.PesepayResponse(false, message)];
                    case 3: return [2];
                }
            });
        }); };
        this.makeSeamlessPayment = function (payment, reasonForPayment, amount, requiredFields) { return __awaiter(_this, void 0, void 0, function () {
            var payload, response, resObj, paid, error_3, message;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this.resultUrl == null)
                            throw new Error('Result url has not beeen specified.');
                        payment.resultUrl = this.resultUrl;
                        payment.returnUrl = this.returnUrl;
                        payment.reasonForPayment = reasonForPayment;
                        payment.amountDetails = new amount_1.Amount(amount, payment.currencyCode);
                        payment.setRequiredFields(__assign({}, requiredFields));
                        payload = this.payloadEncrypt(JSON.stringify(payment));
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        return [4, axios_1.default.post(constants_1.MAKE_SEAMLESS_PAYMENT_URL, { payload: payload }, { headers: this.headers, insecureHTTPParser: true })];
                    case 2:
                        response = _b.sent();
                        resObj = JSON.parse(this.payloadDecrypt(response.data.payload));
                        paid = resObj.transactionStatus == 'SUCCESS';
                        return [2, new response_1.PesepayResponse(true, undefined, resObj.referenceNumber, resObj.pollUrl, resObj.redirectUrl, paid)];
                    case 3:
                        error_3 = _b.sent();
                        message = (_a = error_3.message) !== null && _a !== void 0 ? _a : 'Something went wrong!';
                        return [2, new response_1.PesepayResponse(false, message)];
                    case 4: return [2];
                }
            });
        }); };
        this.createPayment = function (currencyCode, paymentMethodCode, email, phone, name) {
            if (email == null && phone == null)
                throw new Error('Email and/or phone number should be provided');
            var customer = new customer_1.Customer(email, phone, name);
            return new payment_1.Payment(currencyCode, paymentMethodCode, customer);
        };
        this.createTransaction = function (amount, currencyCode, paymentReason, merchantReference) {
            return new transaction_1.Transaction(amount, currencyCode, paymentReason, merchantReference);
        };
        this.integrationKey = integrationKey;
        this.encryptionKey = encryptionKey;
        this.headers = { 'key': this.integrationKey, 'Content-Type': 'application/json' };
    }
    Pesepay.prototype.payloadEncrypt = function (payload) {
        var cipher = this.buildCipher(this.encryptionKey, "encrypt");
        return cipher.update(payload, 'utf8', 'base64') + cipher.final('base64');
    };
    Pesepay.prototype.payloadDecrypt = function (payload) {
        var cipher = this.buildCipher(this.encryptionKey, "decrypt");
        return cipher.update(payload, 'base64', 'utf8') + cipher.final('utf8');
    };
    Pesepay.prototype.buildCipher = function (key, mode) {
        var iv = buffer_1.Buffer.from(key.substr(0, 16), 'utf8');
        var keyBuffer = buffer_1.Buffer.from(key, 'utf8');
        if (mode === "encrypt")
            return (0, crypto_1.createCipheriv)(constants_1.ALGORITHM, keyBuffer, iv);
        else
            return (0, crypto_1.createDecipheriv)(constants_1.ALGORITHM, keyBuffer, iv);
    };
    return Pesepay;
}());
exports.Pesepay = Pesepay;
//# sourceMappingURL=pesepay.js.map